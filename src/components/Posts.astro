---
import Time from "./Time.astro";

const { class: className, posts } = Astro.props;

const isCurrentPost = (slug) => {
  return Astro.url.pathname === `/blog/${slug}`;
};
---

<div class:list={["posts", className]}>
  {
    posts.map(({ slug, data: { title, author, tags } }) => {
      const pubDate = new Date(slug.slice(0, 10));

      return (
        <article class="line">
          <a
            href={`/blog/${slug}`}
            aria-current={isCurrentPost(slug) ? "page" : undefined}
          >
            {title}
          </a>
          <span>{author}</span>
          <Time
            class="text-end"
            date={pubDate}
            options={{ dateStyle: "short" }}
          />
        </article>
      );
    })
  }
  {
    Astro.slots.has("default") && (
      <article class="line">
        <slot />
      </article>
    )
  }
</div>

<style>
  .posts {
    container-type: inline-size;
  }

  article {
    font-weight: 300;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 1em;
    align-items: center;

    @container (min-width: 700px) {
      grid-template-columns: 7fr 2fr 10ch;
    }

    time {
      font-size: 0.8em;
    }
  }

  article :global(a) {
    grid-column: 1 / -1;
    text-decoration: none;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    font-weight: 400;

    @container (min-width: 700px) {
      grid-column: auto;
    }

    &::after {
      content: "";
      inset: 0;
      position: absolute;
    }
  }

  article:has([aria-current]) a::before {
    content: "\25B6" / "";
    display: inline;
  }

  article:has(a:first-child):has(a:last-child) :global(a) {
    font-weight: bold;
  }
</style>
